openapi: 3.0.3
info:
  title: API de Sistema de Créditos
  description: API para gestionar créditos de diferentes tipos
  version: 1.0.0
servers:
  - url: https://localhost:8080
    description: Servidor principal
paths:
  /credits:
    get:
      summary: Obtiene todos los créditos
      responses:
        '200':
          description: Lista de créditos obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreditBase'
    post:
      summary: Crea un nuevo crédito
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditBase'
      responses:
        '201':
          description: Crédito creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditBase'

  /credits/{creditId}:
    delete:
      summary: Elimina un crédito existente
      operationId: deleteCredit
      parameters:
        - name: creditId
          in: path
          description: ID del crédito a eliminar
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Crédito eliminado correctamente
        '404':
          description: Crédito no encontrado
        '400':
          description: Solicitud incorrecta
        '500':
          description: Error interno del servidor
    put:
      summary: Actualiza un crédito existente
      parameters:
        - name: creditId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditBase'
      responses:
        '200':
          description: Crédito actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditBase'
    get:
      summary: Obtiene un crédito por su ID
      parameters:
        - name: creditId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Crédito obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditBase'

  /credits/transactions:
    post:
      summary: Registrar una nueva transacción en la cuenta
      operationId: createTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '201':
          description: Transacción registrada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'

    get:
      summary: Obtener todas las transacciones
      operationId: getAllTransactions
      responses:
        '200':
          description: Historial completo de transacciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'

  /credits/{creditId}/transactions:
    get:
      summary: Obtener transacciones por ID de crédito
      description: Recupera todas las transacciones asociadas a un crédito específico
      operationId: getTransactionsByCreditId
      parameters:
        - name: creditId
          in: path
          description: ID del crédito del cual se desean obtener las transacciones
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lista de transacciones obtenida exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '404':
          description: Crédito no encontrado
        '400':
          description: Solicitud incorrecta
        '500':
          description: Error interno del servidor

  /credits/customer/{customerId}:
    get:
      summary: Verifica si el cliente tiene créditos
      operationId: hasCredits
      parameters:
        - name: customerId
          in: path
          description: ID del cliente para verificar si tiene créditos
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Indica si el cliente tiene créditos
          content:
            application/json:
              schema:
                type: boolean
                example: true
        '400':
          description: Solicitud inválida
          content:
            application/json:
              schema:
                type: string
                example: "ID de cliente inválido"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                type: string
                example: "Error al procesar la solicitud"



  /reporting/salarySummaryForPeriod:
    post:
      summary: reporte
      operationId: postSalarySummaryForPeriod
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - creditId
                - startDate
                - endDate
              properties:
                creditId:
                  type: string
                  description: ID de la cuenta
                startDate:
                  type: string
                  format: date-time
                  description: Fecha de inicio del periodo
                endDate:
                  type: string
                  format: date-time
                  description: Fecha de fin del periodo
      responses:
        '200':
          description: Resumen del usuario especificado
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true

  /reporting/salarySummary/{customerId}:
    get:
      summary: Obtener el reporte de salarios promedios para un cliente
      operationId: getSummarySalaryByCustomerId
      parameters:
        - name: customerId
          in: path
          required: true
          description: ID del usuario
          schema:
            type: string
      responses:
        '200':
          description: Resumen del usuario especificado
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true


  /reporting/{creditId}/transactions:
      get:
        summary: Obtiene los últimos 10 movimientos de una tarjeta de credito
        description: Devuelve un reporte con las últimas 10 transacciones realizadas con la tarjeta de credito especificada
        operationId: getLastTenTransactions
        parameters:
          - name: creditId
            in: path
            description: Número de la tarjeta de débito
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Reporte de transacciones generado exitosamente
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TransactionReport'
          '400':
            description: Número de tarjeta inválido o no encontrado
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Error interno del servidor
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: "VALIDATION_ERROR"
        message:
          type: string
          example: "El campo accountType es requerido"
        details:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string

    TransactionReport:
      type: object
      description: Reporte de transacciones de una tarjeta de débito
      properties:
        cardNumber:
          type: string
          description: Número de la tarjeta de débito
          example: "4539123456789012"
        generationDate:
          type: string
          format: date-time
          description: Fecha y hora de generación del reporte
          example: "2025-04-14T14:30:45"
        transactions:
          type: array
          description: Lista de transacciones incluidas en el reporte
          items:
            $ref: '#/components/schemas/Transaction'
        transactionCount:
          type: integer
          description: Número total de transacciones en el reporte
          example: 10
        oldestTransactionDate:
          type: string
          format: date-time
          description: Fecha de la transacción más antigua en el reporte
          example: "2025-03-15T09:23:11"
        newestTransactionDate:
          type: string
          format: date-time
          description: Fecha de la transacción más reciente en el reporte
          example: "2025-04-13T18:45:22"

    Transaction:
      type: object
      required:
        - type
        - amount
        - creditId
      properties:
        transactionId:
          type: string
        date:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - payment
            - spent
          example: "spent"
        amount:
          type: number
          format: double
        creditId:
          type: string
    CreditType:
      type: string
      enum:
        - CreditCard
        - SimpleCredit
    CustomerType:
      type: string
      enum:
        - personal
        - business
    CreditBase:
      type: object
      required:
        - customerId
        - customerType
        - amount
        - type
      properties:
        creditId:
          type: string
          description: Identificador único del crédito
        customerId:
          type: string
          description: Identificador único del cliente
        customerType:
          $ref: '#/components/schemas/CustomerType'
        amount:
          type: number
          format: double
          description: Monto del crédito
        type:
          $ref: '#/components/schemas/CreditType'
      discriminator:
        propertyName: type
        mapping:
          CreditCard: '#/components/schemas/CreditCard'
          SimpleCredit: '#/components/schemas/SimpleCredit'
    CreditCard:
      allOf:
        - $ref: '#/components/schemas/CreditBase'
        - type: object
          required:
            - cardNumber
          properties:
            cardNumber:
              type: string
              description: Número de la tarjeta de crédito
            availableCredit:
              type: number
              format: double
              description: Crédito disponible
    SimpleCredit:
      allOf:
        - $ref: '#/components/schemas/CreditBase'
        - type: object
          properties:
            amountPaid:
              type: number
              format: double
              description: Monto pagado del crédito

    CreditResume:
      type: object
      required:
        - creditId
        - creditType
        - averageBalance
      properties:
        creditId:
          type: string
        creditType:
          $ref: '#/components/schemas/CreditType'
        averageBalance:
          type: number
          format: double
          example: 1500.75
